"""init

Revision ID: c694c51890d9
Revises: 
Create Date: 2024-06-01 13:04:32.273980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c694c51890d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('issued_tokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('subject', sa.Uuid(), nullable=False),
    sa.Column('revoke', sa.Boolean(), nullable=False),
    sa.Column('device_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['subject'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialists',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('speciality', sa.String(length=100), nullable=False),
    sa.Column('bio', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedule_slots',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('specialist_id', sa.Uuid(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('is_booked', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialist_ratings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('specialist_id', sa.Uuid(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('specialist_id', sa.Uuid(), nullable=False),
    sa.Column('slot_id', sa.Uuid(), nullable=False),
    sa.Column('is_confirmed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['slot_id'], ['schedule_slots.id'], ),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointments')
    op.drop_table('specialist_ratings')
    op.drop_table('schedule_slots')
    op.drop_table('specialists')
    op.drop_table('issued_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
